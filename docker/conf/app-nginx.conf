user nginx;
worker_processes 1;

error_log stderr warn;
pid /var/run/nginx.pid;


events {
    accept_mutex off;
    worker_connections 1024;
}


http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/stdout main;
    log_not_found on;

    sendfile on;

    server_tokens off;

    keepalive_timeout 65;
    tcp_nodelay on;

    #gzip on;

    upstream api_http {
        server api_http:80;
    }

    server {
        listen 80;
        server_name localhost birderapp.com;

        location / {
            # CORS
            add_header 'Access-Control-Allow-Origin' 'http://birderapp.com';
            add_header 'Access-Control-Allow-Methods' 'GET, HEAD, POST, PUT, PATCH, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Allow-Headers'
                'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Vary' 'Accept, Cookie, Origin';

            if ($request_method = 'OPTIONS') {
                # Tell client that this pre-flight info is valid for 20 days
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

            client_max_body_size 1m;
            root /usr/share/nginx/html/app;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        location ~ ^/(inference|static)/ {
            proxy_pass http://api_http;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_redirect off;
            proxy_read_timeout 30;
            proxy_connect_timeout 20;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /health {
            access_log off;
            return 200 "healthy\n";
        }

        location ~ /\.(svn|git|hg|bzr|cvs) {
            deny all;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
